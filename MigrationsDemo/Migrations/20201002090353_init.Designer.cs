// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MigrationsDemo.Db;
using MigrationsDemo.Db.Entities;

namespace MigrationsDemo.Migrations
{
    [DbContext(typeof(MigrationsDemoContext))]
    [Migration("20201002090353_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MigrationsDemo.Db.Entities.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfoJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("[FirstName] + N' ' + [LastName]");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasDiscriminator<int>("Type");
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.Material", b =>
                {
                    b.HasBaseType("MigrationsDemo.Db.Entities.Product");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.Service", b =>
                {
                    b.HasBaseType("MigrationsDemo.Db.Entities.Product");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.Contractor", b =>
                {
                    b.OwnsOne("MigrationsDemo.Db.Entities.ValueObject.Address", "Legal", b1 =>
                        {
                            b1.Property<int>("ContractorId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ContractorId");

                            b1.ToTable("LegalAddresses");

                            b1.WithOwner()
                                .HasForeignKey("ContractorId");
                        });

                    b.OwnsOne("MigrationsDemo.Db.Entities.ValueObject.Address", "Physical", b1 =>
                        {
                            b1.Property<int>("ContractorId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ContractorId");

                            b1.ToTable("PhysicalAddresses");

                            b1.WithOwner()
                                .HasForeignKey("ContractorId");
                        });

                    b.OwnsOne("MigrationsDemo.Db.Entities.ValueObject.Financial", "Finance", b1 =>
                        {
                            b1.Property<int>("ContractorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Credit")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Debit")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ContractorId");

                            b1.ToTable("Contractor");

                            b1.WithOwner()
                                .HasForeignKey("ContractorId");
                        });
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.User", b =>
                {
                    b.HasOne("MigrationsDemo.Db.Entities.Employee", null)
                        .WithOne("User")
                        .HasForeignKey("MigrationsDemo.Db.Entities.User", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MigrationsDemo.Db.Entities.Warehouse", b =>
                {
                    b.OwnsMany("MigrationsDemo.Db.Entities.ValueObject.Address", "Addresses", b1 =>
                        {
                            b1.Property<int>("WarehouseId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WarehouseId", "Id");

                            b1.ToTable("WarehouseAddresses");

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
